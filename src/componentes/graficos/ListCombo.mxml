<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" backgroundColor="#000000" width="400" height="300" chromeColor="#ffffff" alpha="1" backgroundAlpha="0.5" creationComplete="bordercontainer1_creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			[Bindable] public var labelField:String;
			public var fnPost:Function;
			[Bindable] public var dataProvider:ArrayCollection;
			public var activo:Boolean = false;
			
			protected function listOpciones_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(fnPost !=null){
					fnPost.call(this, listOpciones.selectedItem);
				}
			}
			
			protected function stageKeyUpHandler(event:KeyboardEvent):void
			{
				var key:uint = event.keyCode;
				if (key == Keyboard.BACK && this.activo)
				{
					event.stopImmediatePropagation();
					event.stopPropagation();                        
					if(this.fnPost != null){
						this.fnPost.call(this, false);
					}
				}
			}
			
			protected function bordercontainer1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				systemManager.stage.removeEventListener(KeyboardEvent.KEY_UP, stageKeyUpHandler);
				systemManager.stage.addEventListener(KeyboardEvent.KEY_UP, stageKeyUpHandler, false, 1000, true);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:BorderContainer width="90%" borderColor="#FCF8F8" borderWeight="2"
					   color="#FCF7F7" contentBackgroundAlpha=".7" contentBackgroundColor="#1D1C1C"
					   horizontalCenter="0" verticalCenter="0">
		<s:List id="listOpciones" width="100%" borderAlpha="1" borderColor="#FFFDFD"
				borderVisible="true" click="listOpciones_clickHandler(event)" color="#FBF6F6"
				contentBackgroundAlpha="1" contentBackgroundColor="#211F1F"
				dataProvider="{dataProvider}" horizontalCenter="0" labelField="{labelField}"
				verticalCenter="0" itemRenderer="componentes.graficos.RenderNegro"/>	
	</s:BorderContainer>
	
</s:BorderContainer>
