<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   width="100%" height="100%" backgroundAlpha="{add}" backgroundColor="#05060a"
				   color="#ffffff"
				   creationComplete="bordercontainer1_creationCompleteHandler(event)"
				   >
	<s:states>
		<s:State name="Ingresar"/>
		<s:State name="registrar"/>		
	</s:states>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import controlador.Controlador;
			
			import eventos.JugadorEvent;
			import eventos.SesionEvent;
			
			import modelo.Modelo;
			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import vo.JugadorVO;
			
			[Bindable] private var add:Number = 0;
			public var funPost:Function;
			[Bindable] public var msg:String;
			[Bindable] public var btnExtra:Boolean = false;
			[Bindable] public var btnLabel:String = '';
			[Bindable] private var modelApp:Modelo = Modelo.getInstance();
			
			protected function bordercontainer1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				this.addEventListener(Event.ENTER_FRAME, oscurese);
			}
			
			private function oscurese(event:Event):void{
				add += 0.02;
				if(add > 0.9){
					this.removeEventListener(Event.ENTER_FRAME, oscurese);
				}
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.currentState = 'registrar';
				
			}
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				PopUpManager.removePopUp(this);
				modelApp.bloqueo = true;
				var evento:SesionEvent = new SesionEvent(SesionEvent.INICIA_SESION, txtUser.text, txtPass.text);
				//evento.callback = evaluaSesion;
				Controlador.getInstance().dispatchEvent(evento);
			}
			
			protected function salir_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				this.currentState = 'Ingresar';
			}
			
			protected function registrar_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(txtPassRegister.text == txtPassRegisterRepeat.text){
					var user:JugadorVO = new JugadorVO();
					user.user = txtUserRegister.text;
					user.pass = txtPassRegister.text;
					var evento:JugadorEvent = new JugadorEvent(JugadorEvent.CREAR_CUENTA, user);
					Controlador.getInstance().dispatchEvent(evento);
					modelApp.bloqueo = true;
					/*var popWait:BloqueoEspera = new BloqueoEspera();
					popWait.width = this.width;
					popWait.height = this.height;
					PopUpManager.addPopUp(popWait, this);
					PopUpManager.centerPopUp(popWait);*/
				} else {
					var pop:PopupMensaje = new PopupMensaje();
					pop.msg = 'Password no coinciden';
					pop.width = this.width;
					pop.height = this.height;
					PopUpManager.addPopUp(pop, this);
					PopUpManager.centerPopUp(pop);
				}
				
			}
			
		]]>
	</fx:Script>
	<s:SkinnableContainer width="90%" height="70%" horizontalCenter="0" verticalCenter="-50">
		<s:layout>
			<s:VerticalLayout gap="0" horizontalAlign="center"/>
		</s:layout>
		<s:Group width="100%" height="8%">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="#000000"/>
				</s:fill>
			</s:Rect>
			<s:Label text="Registrar o ingresar" fontWeight="bold" horizontalCenter="0" verticalCenter="0"/>	
			<s:Button includeIn="registrar" height="25" label="Salir" click="salir_clickHandler(event)" fontSize="10" right="5" verticalCenter="0" chromeColor="#000000"/>
		</s:Group>
		<s:Group width="100%" height="100%">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="#393939"/>
				</s:fill>
			</s:Rect>
			
			<s:VGroup width="100%" height="100%" gap="10" horizontalAlign="center" paddingBottom="0"
					  paddingTop="0" >
				<s:Image top="5" width="80%" height="100%" horizontalCenter="0"
						 source="assets/images/loginImg.png" fillMode="scale" 
						 top.Ingresar="5" horizontalCenter.Ingresar="0"/>
				<s:TextInput id="txtUser" includeIn="Ingresar" width="80%" prompt="Usuario" text="player1" skinClass="spark.skins.mobile.TextInputSkin" color="#555555"/>
				<s:TextInput id="txtUserRegister" includeIn="registrar" width="80%" prompt="Usuario"
							 skinClass="componentes.graficos.skins.TextInputLogin"/>
				<s:TextInput id="txtPassRegister" includeIn="registrar" width="80%" displayAsPassword="true"
							 prompt="Contraseña"
							 skinClass="componentes.graficos.skins.TextInputLogin"/>
				<s:TextInput id="txtPassRegisterRepeat" includeIn="registrar" width="80%" displayAsPassword="true"
							 prompt="Repetir contraseña"
							 skinClass="componentes.graficos.skins.TextInputLogin"/>	
				<s:TextInput displayAsPassword="true" id="txtPass" includeIn="Ingresar" width="80%" text="1" prompt="Password" skinClass="spark.skins.mobile.TextInputSkin" color="#555555"/>
				<s:CheckBox includeIn="Ingresar" width="80%" label="Recordar password"/>
				<s:HGroup x.Ingresar="4" width="100%" height="100%" verticalAlign="bottom" fontWeight.Ingresar="bold" gap="-1">
					<s:Button includeIn="Ingresar" height="40%" skinClass="componentes.graficos.skins.ButtonPopSkinLogin" label="Ingresar" width="100%" chromeColor="#222222" click="button2_clickHandler(event)"/>
					
					<s:Button includeIn="Ingresar" height="40%" skinClass="componentes.graficos.skins.ButtonPopFinLoginSkin" label="Crear Cuenta" width="100%"
							  chromeColor="#222222" click="button1_clickHandler(event)"/>
				</s:HGroup>
				
			</s:VGroup>
			<s:Button includeIn="registrar" skinClass="skins.BtnInicial" left="10" right="10" bottom="10" label="Crear Cuenta"
					  chromeColor="#222222" click="registrar_clickHandler(event)"/>
				
		</s:Group>
		
			
	</s:SkinnableContainer>
	
	
</s:BorderContainer>
